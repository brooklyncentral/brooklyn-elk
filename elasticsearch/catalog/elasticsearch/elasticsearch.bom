brooklyn.catalog:
  publish: &elasticsearchPublish
    version: &elasticsearchVersion "1.0.2-SNAPSHOT" # BROOKLYN_ELK_VERSION
    iconUrl: &elasticsearchIconUrl "https://static-www.elastic.co/assets/blt9a26f88bfbd20eb5/icon-elasticsearch-bb.svg"
    description: &elasticsearchDescription
      Elasticsearch is a distributed, RESTful search and analytics engine capable of solving a growing number of use cases.
      As the heart of the Elastic Stack, it centrally stores your data so you can discover the expected and uncover the unexpected.
    license_code: "APACHE-2.0"
  global.parameters:
    elasticsearch.cluster.name: &elasticsearchClusterName
      name: elasticsearch.cluster.name
      label: "Cluster name"
      description: |
        The elasticsearch Cluster name
      type: string
    elasticsearch.node.name: &elasticsearchNodeName
      name: elasticsearch.node.name
      label: "Node name"
      description: |
        The elasticsearch node name
      type: string
    elasticsearch.http.port: &elasticsearchHttpPort
      name: elasticsearch.http.port
      label: "HTTP port"
      description: |
        The elasticsearch HTTP port
      type: integer
      default: 9200
    elasticsearch.tcp.port: &elasticsearchTcpPort
      name: elasticsearch.tcp.port
      label: "TCP port"
      description: |
        The elasticsearch HTTP port
      type: integer
      default: 9330
    elasticSearch.bind.address: &elasticsearchBindAddress
      name: elasticsearch.bind.address
      label: "Bind address"
      description: |
        The ip address to bind on - defaults to host.subnet.address
      type: string
  items:
    - id: elasticsearch-node
      name: "Elasticsearch Node"
      description: *elasticsearchDescription
      version: *elasticsearchVersion
      iconUrl: *elasticsearchIconUrl
      publish: *elasticsearchPublish
      itemType: entity
      item:
        id: elasticsearch-node
        name: "Elasticsearch Node"
        type: org.apache.brooklyn.entity.software.base.VanillaSoftwareProcess
        brooklyn.parameters:
          - *elasticsearchClusterName
          - *elasticsearchNodeName
          - *elasticsearchHttpPort
          - *elasticsearchTcpPort
          - *elasticsearchBindAddress
        brooklyn.config:
          provisioning.properties:
            osFamily: centos
            osVersionRegex: 7
            minRam: 8192mb
            minDisk: 100gb
            minCores: 4
          shell.env: &elasticsearchShellEnv
            ELASTICSEARCH_CLUSTER_NAME: $brooklyn:config("elasticsearch.cluster.name")
            ELASTICSEARCH_NODE_NAME: $brooklyn:config("elasticsearch.node.name")
            ELASTICSEARCH_HTTP_PORT: $brooklyn:config("elasticsearch.http.port")
            ELASTICSEARCH_TCP_PORT: $brooklyn:config("elasticsearch.tcp.port")
            ELASTICSEARCH_BIND_ADDRESS: $brooklyn:config("elasticsearch.bind.address")
            APPLICATION_ID: $brooklyn:attributeWhenReady("application.id")
            ENTITY_ID: $brooklyn:attributeWhenReady("entity.id")
            IP_ADDRESS: $brooklyn:attributeWhenReady("host.subnet.address")

          install.command: |
            sudo rpm --import https://artifacts.elastic.co/GPG-KEY-elasticsearch
            sudo tee /etc/yum.repos.d/elasticsearch.repo <<-EOF
            [elasticsearch-5.x]
            name=Elasticsearch repository for 5.x packages
            baseurl=https://artifacts.elastic.co/packages/5.x/yum
            gpgcheck=1
            gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch
            enabled=1
            autorefresh=1
            type=rpm-md
            EOF
            sudo yum update -y
            sudo yum install -y augeas elasticsearch java-1.8.0-openjdk
          customize.command: |
            sudo cp /etc/elasticsearch/elasticsearch.yml /etc/elasticsearch/elasticsearch.yml.original
            if [ -z "${ELASTICSEARCH_CLUSTER_NAME}" ]; then ELASTICSEARCH_CLUSTER_NAME="${APPLICATION_ID}"; fi
            if [ -z "${ELASTICSEARCH_NODE_NAME}" ]; then ELASTICSEARCH_NODE_NAME="${ENTITY_ID}"; fi
            if [ -z "${ELASTICSEARCH_BIND_ADDRESS}" ]; then ELASTICSEARCH_BIND_ADDRESS="${IP_ADDRESS}"; fi

            sudo tee /etc/elasticsearch/elasticsearch.yml <<-EOF
            cluster.name: ${ELASTICSEARCH_CLUSTER_NAME}
            node.name: ${ELASTICSEARCH_NODE_NAME}
            network.host: ${ELASTICSEARCH_BIND_ADDRESS}
            http.port: ${ELASTICSEARCH_HTTP_PORT}
            transport.tcp.port: ${ELASTICSEARCH_TCP_PORT}
            bootstrap.memory_lock: true
            EOF
            if [ ! -z "${ELASTICSEARCH_UNICAST_HOSTS}" ]; then
              sudo tee -a /etc/elasticsearch/elasticsearch.yml <<-EOF
            discovery.zen.ping.unicast.hosts: [${ELASTICSEARCH_UNICAST_HOSTS}]
            EOF
            fi

            sudo augtool -Ast "Simplevars incl /etc/sysconfig/elasticsearch" <<-EOF
            set /files/etc/sysconfig/elasticsearch/ES_JAVA_OPTS '"-Xms4g -Xmx4g"'
            set /files/etc/sysconfig/elasticsearch/MAX_LOCKED_MEMORY unlimited
            EOF

            sudo mkdir -p /etc/systemd/system/elasticsearch.service.d
            sudo tee /etc/systemd/system/elasticsearch.service.d/elasticsearch.conf <<-EOF
            [Service]
            LimitMEMLOCK=infinity
            EOF

          launch.command: sudo systemctl start elasticsearch
          stop.command: sudo systemctl stop elasticsearch
          checkRunning.command: sudo systemctl status elasticsearch
        brooklyn.enrichers:
          - type: org.apache.brooklyn.enricher.stock.Transformer
            brooklyn.config:
              uniqueTag: elasticsearch-main-uri-enricher
              enricher.producer: $brooklyn:entity("elasticsearch-node")
              enricher.triggerSensors:
                - $brooklyn:sensor("host.address")
              enricher.targetSensor:
                $brooklyn:sensor("main.uri")
              enricher.targetValue:
                $brooklyn:formatString:
                  - "http://%s:%s/"
                  - $brooklyn:attributeWhenReady("host.address")
                  - $brooklyn:config("elasticsearch.http.port")
          - type: org.apache.brooklyn.enricher.stock.Transformer
            brooklyn.config:
              uniqueTag: elasticsearch-main-uri-enricher
              enricher.producer: $brooklyn:entity("elasticsearch-node")
              enricher.triggerSensors:
                - $brooklyn:sensor("host.address")
              enricher.targetSensor:
                $brooklyn:sensor("main.uri.public")
              enricher.targetValue:
                $brooklyn:formatString:
                  - "http://%s:%s/"
                  - $brooklyn:attributeWhenReady("host.address")
                  - $brooklyn:config("elasticsearch.http.port")
          - type: org.apache.brooklyn.enricher.stock.Transformer
            brooklyn.config:
              uniqueTag: elasticsearch-main-uri-private-enricher
              enricher.producer: $brooklyn:entity("elasticsearch-node")
              enricher.triggerSensors:
                - $brooklyn:sensor("host.subnet.address")
              enricher.targetSensor:
                $brooklyn:sensor("main.uri.private")
              enricher.targetValue:
                $brooklyn:formatString:
                  - "http://%s:%s/"
                  - $brooklyn:attributeWhenReady("host.subnet.address")
                  - $brooklyn:config("elasticsearch.http.port")
    - id: elasticsearch-cluster
      name: "Elasticsearch Cluster"
      description: *elasticsearchDescription
      version: *elasticsearchVersion
      iconUrl: *elasticsearchIconUrl
      publish: *elasticsearchPublish
      itemType: entity
      item:
        type: cluster
        id: elasticsearch-cluster
        name: "Elasticsearch Cluster"
        brooklyn.parameters:
          - *elasticsearchClusterName
          - *elasticsearchHttpPort
          - *elasticsearchTcpPort
          - *elasticsearchBindAddress
        brooklyn.config:
          cluster.initial.size: 3
          dynamiccluster.memberspec:
            $brooklyn:entitySpec:
              type: elasticsearch-node
              brooklyn.config:
                shell.env:
                  <<: *elasticsearchShellEnv
                  ELASTICSEARCH_UNICAST_HOSTS: $brooklyn:parent().attributeWhenReady("elasticsearch.hostnames")
        brooklyn.enrichers:
          - type: org.apache.brooklyn.enricher.stock.Aggregator
            brooklyn.config:
              uniqueTag: elasticsearch-hostname-aggregator
              enricher.sourceSensor: $brooklyn:sensor("host.subnet.address")
              enricher.targetSensor: $brooklyn:sensor("elasticsearch.hostname.list")
              enricher.aggregating.fromMembers: true
              enricher.aggregator.excludeBlank: true
              quorum.check.type: all
              quorum.total.size: $brooklyn:config("cluster.initial.size")
          - type: org.apache.brooklyn.enricher.stock.Joiner
            brooklyn.config:
              uniqueTag: elasticsearch-hostname-joiner
              enricher.sourceSensor: $brooklyn:sensor("elasticsearch.hostname.list")
              enricher.targetSensor: $brooklyn:sensor("elasticsearch.hostnames")
              enricher.joiner.quote: true
        brooklyn.policies:
          - type: org.apache.brooklyn.policy.ha.ServiceReplacer
